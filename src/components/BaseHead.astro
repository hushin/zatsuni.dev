---
// Import the global.css file here so that it is included on
// all pages through the use of the <BaseHead /> component.
import "../styles/global.css";
import type { ImageMetadata } from "astro";
// import FallbackImage from "../assets/blog-placeholder-about.jpg";
import { SITE } from "@config";

export interface Props {
  title?: string;
  description?: string;
  image?: ImageMetadata;
  pubDatetime?: Date;
  modDatetime?: Date | null;
}

const canonicalURL = new URL(Astro.url.pathname, Astro.site);
const author = SITE.author;

const {
  title: pageTitle,
  description: pageDescription,
  image,
  pubDatetime,
  modDatetime,
} = Astro.props;
const title = pageTitle ? `${pageTitle} | ${SITE.title}` : SITE.title;
const description = pageDescription || SITE.desc;
---

<!-- Global Metadata -->
<meta charset="utf-8" />
<meta name="viewport" content="width=device-width,initial-scale=1" />
<link rel="icon" type="image/svg+xml" href="/my-icon-min.svg" />
<link rel="sitemap" href="/sitemap-index.xml" />
<link
  rel="alternate"
  type="application/rss+xml"
  title={SITE.title}
  href={new URL("rss.xml", Astro.site)}
/>
<meta name="generator" content={Astro.generator} />

<!-- Canonical URL -->
<link rel="canonical" href={canonicalURL} />

<!-- Primary Meta Tags -->
<title>{title}</title>
<meta name="title" content={title} />
<meta name="description" content={description} />
<meta name="author" content={author} />

<!-- Article Published/Modified time -->
{
  pubDatetime && (
    <meta
      property="article:published_time"
      content={pubDatetime.toISOString()}
    />
  )
}
{
  modDatetime && (
    <meta
      property="article:modified_time"
      content={modDatetime.toISOString()}
    />
  )
}

<!-- Open Graph / Facebook -->
{/* TODO <meta property="og:type" content="website" /> */}
<meta property="og:url" content={Astro.url} />
<meta property="og:title" content={title} />
<meta property="og:description" content={description} />
{image && <meta property="og:image" content={new URL(image.src, Astro.url)} />}

{/* TODO Google JSON-LD Structured data */}

<!-- Twitter -->
<meta property="twitter:card" content="summary_large_image" />
<meta property="twitter:url" content={Astro.url} />
<meta property="twitter:title" content={title} />
<meta property="twitter:description" content={description} />
{
  image && (
    <meta property="twitter:image" content={new URL(image.src, Astro.url)} />
  )
}
