---
import { getCollection } from "astro:content";
import BaseLayout from "../../layouts/BaseLayout.astro";
import Card from "../../components/Card.astro";
import { SITE } from "../../config";

// 記事を取得してソート（下書きとスケジュール投稿は除外）
const allPosts = (
  await getCollection("blog", ({ data }) => {
    return !data.draft && data.pubDatetime <= new Date();
  })
).sort((a, b) => b.data.pubDatetime.valueOf() - a.data.pubDatetime.valueOf());

// 年別にグループ化
const postsByYear = allPosts.reduce(
  (acc, post) => {
    const year = post.data.pubDatetime.getFullYear().toString();
    if (!acc[year]) {
      acc[year] = [];
    }
    acc[year].push(post);
    return acc;
  },
  {} as Record<string, typeof allPosts>
);

// 年のリストを新しい順にソート
const years = Object.keys(postsByYear).sort(
  (a, b) => parseInt(b) - parseInt(a)
);

// ページタイトルとメタ情報
const totalPosts = allPosts.length;
const pageTitle = "記事一覧";
const pageDescription = `${SITE.desc} - ${pageTitle}。全${totalPosts}件の記事があります。`;
---

<BaseLayout title={pageTitle} description={pageDescription}>
  <div class="container mx-auto max-w-4xl px-4 py-8">
    <h1 class="text-base-content mb-2 pb-4 text-3xl font-bold">記事一覧</h1>

    <div class="space-y-12">
      {
        years.map(year => (
          <section>
            <h2 class="text-base-content border-base-300 mb-6 border-b pb-2 text-2xl font-bold">
              {year}年
            </h2>
            <ul class="space-y-0">
              {postsByYear[year].map(post => (
                <Card href={`/posts/${post.id}/`} frontmatter={post.data} />
              ))}
            </ul>
          </section>
        ))
      }
    </div>
  </div>
</BaseLayout>
